{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","sortedList","setSortedList","none","sortMethod","setSortMethod","isReversed","setIsReversed","handleSort","method","preparedGoods","byAlphabetical","sort","good1","good2","localeCompare","byLength","length","reverse","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAA4B,CACvC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,K,gCAAAA,E,oBAAAA,E,aAAAA,M,KAME,IAAME,EAAgB,WAC3B,MACEC,mBAAiCF,GADnC,mBAAOG,EAAP,KAAmBC,EAAnB,KAEA,EAAoCF,mBAAmBH,EAASM,MAAhE,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAoCL,oBAAS,GAA7C,mBAAOM,EAAP,KAAmBC,EAAnB,KAEMC,EAAa,SAACC,GAClB,IAAMC,EAAa,UAAOZ,GAE1B,OAAQW,GACN,KAAKZ,EAASc,eACZD,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAME,cAAcD,MACzDT,EAAcI,GACd,MAEF,KAAKZ,EAASmB,SACZN,EAAcE,MAAK,SAACC,EAAOC,GAAR,OAAkBD,EAAMI,OAASH,EAAMG,UAC1DZ,EAAcI,GACd,MAEF,QACEJ,EAAcR,EAASM,MAIvBG,GACFI,EAAcQ,UAGhBhB,EAAcQ,IAiBhB,OACE,sBAAKS,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMZ,EAAWX,EAASc,iBACnCU,KAAK,SACLF,UAAWG,IAAG,SAAU,UAAW,CACjC,WAAYlB,IAAeP,EAASc,iBAJxC,iCAUA,wBACES,QAAS,kBAAMZ,EAAWX,EAASmB,WACnCK,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,WAAYlB,IAAeP,EAASmB,WAJxC,4BAUA,wBACEI,QAtCc,WACpB,IAAMV,EAAa,YAAOT,GAE1BS,EAAcQ,UACdX,GAAeD,GACfJ,EAAcQ,IAkCRW,KAAK,SACLF,UAAWG,IAAG,SAAU,aAAc,CACpC,YAAahB,IAJjB,qBAUCF,IAAeP,EAASM,MAAQG,EAC/B,wBACEc,QAzCU,WAClBb,GAAc,GACdL,EAAcJ,GACdO,EAAcR,EAASM,OAuCfkB,KAAK,SACLF,UAAU,4BAHZ,mBAOE,QAGN,6BACGlB,EAAWsB,KAAI,SAAAC,GAAI,OAAK,oBAAI,UAAQ,OAAZ,SAAoBA,aChHrDC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.80a54868.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  byAlphabetical = 'byAlphabetical',\n  byLength = 'byLength',\n  none = 'none',\n}\n\nexport const App: React.FC = () => {\n  const [sortedList, setSortedList]\n  = useState<typeof goodsFromServer>(goodsFromServer);\n  const [sortMethod, setSortMethod] = useState<SortType>(SortType.none);\n  const [isReversed, setIsReversed] = useState(false);\n\n  const handleSort = (method: SortType) => {\n    const preparedGoods = [...goodsFromServer];\n\n    switch (method) {\n      case SortType.byAlphabetical:\n        preparedGoods.sort((good1, good2) => good1.localeCompare(good2));\n        setSortMethod(method);\n        break;\n\n      case SortType.byLength:\n        preparedGoods.sort((good1, good2) => good1.length - good2.length);\n        setSortMethod(method);\n        break;\n\n      default:\n        setSortMethod(SortType.none);\n        break;\n    }\n\n    if (isReversed) {\n      preparedGoods.reverse();\n    }\n\n    setSortedList(preparedGoods);\n  };\n\n  const handleReverse = () => {\n    const preparedGoods = [...sortedList];\n\n    preparedGoods.reverse();\n    setIsReversed(!isReversed);\n    setSortedList(preparedGoods);\n  };\n\n  const handleReset = () => {\n    setIsReversed(false);\n    setSortedList(goodsFromServer);\n    setSortMethod(SortType.none);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => handleSort(SortType.byAlphabetical)}\n          type=\"button\"\n          className={cn('button', 'is-info', {\n            'is-light': sortMethod !== SortType.byAlphabetical,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => handleSort(SortType.byLength)}\n          type=\"button\"\n          className={cn('button', 'is-success', {\n            'is-light': sortMethod !== SortType.byLength,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={handleReverse}\n          type=\"button\"\n          className={cn('button', 'is-warning', {\n            'is-light': !isReversed,\n          })}\n        >\n          Reverse\n        </button>\n\n        {sortMethod !== SortType.none || isReversed ? (\n          <button\n            onClick={handleReset}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        ) : null}\n      </div>\n\n      <ul>\n        {sortedList.map(good => (<li data-cy=\"Good\">{good}</li>))}\n      </ul>\n\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}